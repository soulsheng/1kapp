<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"> 
<html> 
<head> 
<script language="JavaScript"> 
  var prePage="end";
  var nextPage="01.htm";
  var testPage="end";
  var labPage="end";
  var libraryPage="end";
  var studyPage="end";
  var homePage="end";
	function showwin(url,winname,properties){
		window.open(url,winname,properties)
	}
</script> 
<meta http-equiv="Content-Type" content="text/html; charset=gb2312"> 

<title>2.1输出信息到屏幕的程序</title> 
<link href="images/css.css" rel="stylesheet" type="text/css"> 
</head> 

<body topmargin="0">
<p align="center" class="t1"><br>
  输出信息到屏幕</p>
　　一个计算机程序由一系列指令组成，程序中每一条指令用分号“；”终止，它将按照一个给定的顺序执行。<br>
　　指令：System.out.print(m1)或System.out.println(m1)<br>
　　语义：在光标的当前位置输出信息m1，前者输出m1信息以后，光标停留在该条信息之后；后者在输出m1信息以后，光标移到屏幕的下一行起始位置。<br>
　　m1：通过一对双引号括起的字符序列所组成。<br>
　　例1：System.out.println(“programming is cool”)；<br>
　　例2：System.out.print(“计算机科学与技术非常有趣”)；<br>
Java程序的标准模板：<br>
public class Name{<br>
　　public static void main(String[]args){<br>
　　　　程序代码部分<br>
}<br>
<br>
　　<a href="ch2/ch2ex1.java" target="_blank">【例2-1】编写一个简单的输出程序，要求输出任意两条信息，且第1条信息与第2条信息之间空一行。</a><br>
<p align="center" class="t1">输出算术表达式</p>
　　表达式由运算符和操作数组成，是表达某种运算或含义的式子。<br>
　　<img src="images/STAR.GIF" width="18" height="20">运算符：对操作数进行运算的符号，如数学上的加（+）、减（-）、乘（*）、除（/）就是算术运算符。<br>
　　<img src="images/STAR.GIF" width="18" height="20">程序中所有的算术表达式都是以线形的方式书写。<br>
　　例3<br>
<img src="images/021/021-3.jpg" width="54" height="38">的线形形式是（3+2*6）/8<br>
　　例4<br>
<img src="images/021/021-4.jpg" width="100" height="45">的线形形式是（7*9-12）/（2*（78-12*2））<br>
　　<img src="images/STAR.GIF" width="18" height="20">程序语言中，所有的运算符必须明确写出，不能隐含。<br>
　　例5：2（78-12*2）在程序语言中必须写成2*（78-12*2）。<br>
　　<img src="images/STAR.GIF" width="18" height="20">优先权：在表达式中高优先权的运算符先于低优先权的运算符运算。<br>
　　例6：<br>
　　3+5*6=3+30=33<br>
　　-2*-6-4*9=12-36=-24<br>
　　4*-4+6*（3-9）+21/7=-16+6*-6+3=-16+ -36+3=-52+3=-49<br>
　　<a href="ch2/ch2ex2.java" target="_blank">【例2-2】编写一个程序，输出表达式3+5*6的运算结果</a><br>
<br>
　　<a href="ch2/ch2ex3.java" target="_blank">【例2-3】编写一个程序，设f（x）=x2-2x+7，计算f（5）</a><br>
<br>
<p align="center" class="t1">程序的调试　　  </p>
　　
　　当完成程序的编写后，必须输入计算机并进行调试和测试，以便发现编码中出现的错误且得到预期希望的结果。 专业上将程序中出现的错误称为“bug”，排除程序中错误的过程则称为调试（debugging）。程序调试中的错误类型有：<br>
　　<img src="images/STAR.GIF" width="18" height="20"><span class="t2">语法错误（syntax 
    errors）：</span><br>
　　程序设计语言和编程具有非常严格的语法规则，如果在编程过程中违反这些规则，例如漏掉每条语句后面的分号（；），就会出现语法错误。<br>
　　<img src="images/STAR.GIF" width="18" height="20"><span class="t2">运行错误（run-time 
    errors）：</span><br>
　　运行错误指的是程序通过编译，在执行时出现的错误。例如算术表达式中除数为0。<br>
　　<img src="images/STAR.GIF" width="18" height="20"><span class="t2">逻辑错误（logic 
    errors）：</span><br>
　　程序能顺利通过编译并能“正确”执行，但结果不是编程解决问题所预期的结果，例如程序中将运算符“+”误写为“-”。这种错误通常被归纳为算法错误。
<p align="center">  <br>
  <img src="images/021/t2-1A.jpg" width="500" height="362"><br>
  JCreator工具下的语法报错 </p>
<p align="center"><img src="images/021/t2-1B.jpg" width="500" height="327"><br>
  命令状态下的语法报错</p>
<p align="center"><img src="images/021/t2-2A.jpg" width="500" height="328"><br>
  JCreator工具下的运行错误</p>
<p align="center"><img src="images/021/t2-2B.jpg" width="500" height="327"><br>
  命令状态的运行错误 <br>
</p>
</body> 
</html> 
